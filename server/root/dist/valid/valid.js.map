{"version":3,"sources":["../../src/valid/valid.js"],"names":["Valid","app","data","name","organiz","all","get","guest","user","roles","method","path","paramRule","init","use","req","res","next","ps","split","tag","col","Base"],"mappings":";;;;;;;;;;;;;;AACA;IACqBA,K;;;AAoCjB;;;AAjBA;AAkBA,mBAAYC,GAAZ,EAAiB;AAAA;;AAAA;;AAAA,cAlCjBC,IAkCiB,GAlCX,CAAC;AACHC,kBAAM,QADH,EACa;AAChBC,qBAAS,QAFN,EAEgB;AACnBC,iBAAK,CAAC,OAAD,CAHF,CAGY;AAHZ,SAAD,EAIH;AACCF,kBAAM,SADP,EACkB;AACjBC,qBAAS,QAFV,EAEoB;AACnBE,iBAAK;AACDC,uBAAO,CAAC,MAAD,EAAS,OAAT,EAAkB,EAAlB;AADN;AAHN,SAJG,EAUH;AACCJ,kBAAM,MADP,EACe;AACdC,qBAAS,QAFV,EAEoB;AACnBC,iBAAK,CAAC,OAAD,CAHN,EAVG,CAkCW;AAAA,cAjBjBG,IAiBiB,GAjBV;AACHJ,qBAAS,YADN,EACoB;AACvBK,mBAAO,CAAC,OAAD;AAFJ,SAiBU;AAAA,cAXjBA,KAWiB,GAXV,CAAC;AACJC,oBAAQ,KADJ,EACW;AACfC,kBAAM,WAFF;AAGJF,mBAAO,CAAC,OAAD,CAHH;AAIJG,uBAAW;AACPT,sBAAM,CAAC,EAAD;AADC;AAJP,SAAD,CAWU;;AAEb,cAAKF,GAAL,GAAWA,GAAX;AACAY;AAHa;AAIhB;;AAED;;;AAlBA;;;AAvBA;;;;;+BA0CO;AACH;AACA,iBAAKZ,GAAL,CAASa,GAAT,CAAa,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC7B;AACA,oBAAIC,KAAKH,IAAIJ,IAAJ,CAASQ,KAAT,CAAe,GAAf,CAAT;AACA;AACA,oBAAIC,MAAMF,GAAG,CAAH,CAAV;AACA;AACA,oBAAIG,MAAMH,GAAG,CAAH,CAAV;AACA;AACA,oBAAIE,QAAQ,GAAZ,EAAiB;AACbH;AACJ;AACC,iBAHD,MAGO,CAEN;AACDA;AACH,aAfD;AAgBH;;;;EA9D8BK,I;;kBAAdtB,K","file":"valid.js","sourcesContent":["\n// 权限验证类\nexport default class Valid extends Base {\n\n    // 数据描述\n    data =[{\n        name: 'server', // 服务器数据\n        organiz: 'system', // 系统\n        all: ['admin'] // 所有操作 'admin' 角色\n    }, {\n        name: 'product', // 产品数据\n        organiz: 'custom', // 自定义\n        get: {\n            guest: ['name', 'price', '']\n        }\n    }, {\n        name: 'role', // 角色表\n        organiz: 'custom', // 自定义组织\n        all: ['admin'], // \n    }]\n\n    // 成员信息描述\n    user = {\n        organiz: 'company.hr', // 公司人事部\n        roles: ['admin',]\n    }\n\n    // 访问路径配置数据\n    roles =[{\n        method: 'all', // [all, get, post, put, delete]\n        path: '/p/server',\n        roles: ['admin'],\n        paramRule: {\n            name: [{\n            }]\n        }\n    }];\n\n    // 构造方法\n    constructor(app) {\n        super();\n        this.app = app;\n        init();\n    }\n\n    // 初始化方法\n    init() {\n        // 权限验证中间件\n        this.app.use((req, res, next) => {\n            // 分解请求url\n            let ps = req.path.split('/');\n            // 获取访问标识\n            let tag = ps[1];\n            // 获取集合名称\n            let col = ps[2];\n            // 免登陆访问\n            if (tag === 'u') {\n                next();\n            // 需登录访问\n            } else {\n\n            }\n            next();\n        });\n    }\n\n}"]}