{"version":3,"sources":["../../src/event/event.js"],"names":["Event","props","autoBind","methods","forEach","method","bind","Object","getOwnPropertyNames","constructor","prototype","filter","prop","global"],"mappings":";;;;AACA;;;;;;;;;;+eADA;;;AAGA;IACMA,K;;;AAEF;AACA,mBAAYC,KAAZ,EAAmB;AAAA;;AAGf;AAHe,kHAETA,KAFS;AACf;;;AAGA,cAAKA,KAAL,GAAaA,KAAb;;AAEA;AACA,cAAKC,QAAL;AAPe;AAQlB;;AAED;;;;;6BACKC,O,EAAS;AAAA;;AACVA,oBAAQC,OAAR,CAAgB,kBAAU;AACtB,uBAAKC,MAAL,IAAe,OAAKA,MAAL,EAAaC,IAAb,QAAf;AACH,aAFD;AAGH;;AAED;;;;mCACW;AAAA;;AACP,iBAAKA,IAAL,CACIC,OAAOC,mBAAP,CAA2B,KAAKC,WAAL,CAAiBC,SAA5C,EACKC,MADL,CACY;AAAA,uBAAQ,OAAO,OAAKC,IAAL,CAAP,KAAsB,UAA9B;AAAA,aADZ,CADJ;AAIH;;AAED;;;;yCACiB,CAAE;;AAEnB;;;;wCACgB,CAAE;;;;;AAItB;;;AACAC,OAAOb,KAAP,GAAeA,KAAf;;AAEA","file":"event.js","sourcesContent":["// 导入事件处理器\nimport EventOperator from './event-operator.js';\n\n// 事件相关类\nclass Event extends EventOperator {\n\n    // 事件构造方法\n    constructor(props) {\n        // 父类构造方法\n        super(props);\n        // 设置事件属性\n        this.props = props;\n\n        // 将所有方法，绑定this\n        this.autoBind();\n    }\n\n    // 绑定方法数组\n    bind(methods) {\n        methods.forEach(method => {\n            this[method] = this[method].bind(this);\n        });\n    }\n\n    // 执行类的所有方法绑定\n    autoBind() {\n        this.bind(\n            Object.getOwnPropertyNames(this.constructor.prototype)\n                .filter(prop => typeof this[prop] === 'function')\n        );\n    }\n\n    // 事件将要挂载\n    eventWillMount() {}\n\n    // 事件挂载成功\n    eventDidMount() {}\n\n\n}\n// 定义为全局变量\nglobal.Event = Event;\n\n/*\n情境 S:\n\n事件处理模型，将所有操作抽象成事件处理\n任务 T:\n\n事件处理器 Event Processor 负责，事件Event 生命周期的触发、事件串行，并行处理\n事件Event 实现生命周期逻辑，构建其余事件逻辑关系\n行动 A:\n\n事件挂载 Mounting\n// class constructor -> eventWillMount -> eventDidMount\neventDidMount() {   \n  // 触发其他事件\n  this.event(AjaxEvent, this).props({key: 'value'}).setState({}).then(()=> {\n    \n  });\n}\n事件状态更新 State Change\n// 触发事件状态更新\nthis.setState({\n   key: value\n});\n// eventWillUpdate -> checkEventFinish\n事件卸载 UnMounting\n// checkEventFinish -> eventFinish -> eventWillUnmount\n*/"]}