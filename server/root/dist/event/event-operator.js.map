{"version":3,"sources":["../../src/event/event-operator.js"],"names":["EventOperator","event","_event","props","_props","eventObj","eventWillMount","eventDidMount","state"],"mappings":";;;;;;;;;;AAAA;IACqBA,a;;AAEjB;AACA,2BAAYC,KAAZ,EAAmB;AAAA;;AACf,aAAKC,MAAL,GAAcD,KAAd;AACH;;AAED;;;;;8BACME,M,EAAO;AACT,iBAAKC,MAAL,GAAcD,MAAd;AACA,mBAAO,IAAP;AACH;;AAED;;;;8BACK;AACD;AACA,iBAAKE,QAAL,GAAgB,IAAI,KAAKH,MAAT,CAAgB,KAAKE,MAArB,CAAhB;AACA;AACA,iBAAKC,QAAL,CAAcC,cAAd;AACA;AACA,iBAAKD,QAAL,CAAcE,aAAd;AACH;;AAED;;;;iCACSC,K,EAAO,CAAE;;;;;;kBAxBDR,a","file":"event-operator.js","sourcesContent":["// 事件操作相关类\nexport default class EventOperator {\n\n    // 事件操作构造方法\n    constructor(event) {\n        this._event = event;\n    }\n\n    // 设置事件属性\n    props(props) {\n        this._props = props;\n        return this;\n    }\n\n    // 执行相关事件\n    do() {\n        // 构建事件对象\n        this.eventObj = new this._event(this._props);\n        // 事件对象将要挂载\n        this.eventObj.eventWillMount();\n        // 事件对象挂载成功\n        this.eventObj.eventDidMount();\n    }\n\n    // 改变自身状态\n    setState(state) {}\n\n}\n"]}