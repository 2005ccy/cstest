{"version":3,"sources":["../../src/common/config.js"],"names":["platform","Config","prod","name","mongo","url","host","test","dev","common","max","min","idleTimeoutMillis","requestPreMinute","inputData","outputData","log","appenders","type","category","baelogOptions","init","global","config","isDevEnv","isTestEnv","isProdEnv","hostname","_","extend"],"mappings":";;;;;;qjBAAA;;;AACA;;;;;;;;AAEA;AACA,IAAMA,WAAW,aAAGA,QAAH,EAAjB;;AAEA;;IACqBC,M;;AA4BjB;;;AA1BA;AAoEA,sBAAc;AAAA;;AAAA,aAnEdC,IAmEc,GAnEP;AACH;AACAC,kBAAM,MAFH;AAGH;AACAC,mBAAO;AACH;AACAC,qBAAK;AAFF,aAJJ;AAQH;AACAC,kBAAM;AATH,SAmEO;AAAA,aAtDdC,IAsDc,GAtDP;AACH;AACAJ,kBAAM,MAFH;AAGH;AACAC,mBAAO;AACH;AACAC,qBAAK;AAFF,aAJJ;AAQH;AACAC,kBAAM;AATH,SAsDO;AAAA,aAzCdE,GAyCc,GAzCR;AACF;AACAL,kBAAM,KAFJ;AAGF;AACAC,mBAAO;AACH;AACAC,qBAAK;AAFF,aAJL;AAQF;AACAC,kBAAM;AATJ,SAyCQ;AAAA,aA5BdG,MA4Bc,GA5BL;AACLL,mBAAO;AACHM,qBAAK,EADF;AAEH;AACAC,qBAAK,CAHF;AAIH;AACAC,mCAAmB,KALhB;AAMH;AACAC,kCAAkB,MAPf;AAQH;AACAC,2BAAW,OAAO,IAAP,GAAc,GATtB;AAUH;AACAC,4BAAY,OAAO,IAAP,GAAc;AAXvB,aADF;AAcLC,iBAAK;AACD;AACAC,2BAAW,CAAC;AACRC,0BAAM,SADE;AAERC,8BAAU;AAFF,iBAAD,CAFV;AAMD;AACAC,+BAAe;AACX,4BAAQ,kCADG;AAEX,8BAAU;AAFC;AAPd;AAdA,SA4BK;;AACV,aAAKC,IAAL;AACH;;AA/BD;;;AA1BA;;;;;+BA2DO;AACH;AACAC,mBAAOC,MAAP,GAAgB,KAAKhB,IAArB;;AAEA;AACAe,mBAAOE,QAAP,GAAkB,KAAlB;AACA;AACAF,mBAAOG,SAAP,GAAmB,KAAnB;AACA;AACAH,mBAAOI,SAAP,GAAmB,KAAnB;;AAEA;AACA;AACA,gBAAI,YAAY1B,QAAhB,EAA0B;AACtB;AACAsB,uBAAOE,QAAP,GAAkB,IAAlB;AACJ;AACC,aAJD,MAIO,IAAI,YAAYxB,QAAhB,EAA0B;AAC7B;AACA,oBAAIG,OAAO,aAAGwB,QAAH,EAAX;AACA;AACA,oBAAIxB,IAAJ,EAAU;AACN;AACA,wBAAI,sBAAsBA,IAA1B,EAAgC;AAC5B;AACAmB,+BAAOG,SAAP,GAAmB,IAAnB;AACH,qBAHD,MAGO;AACH;AACAH,+BAAOI,SAAP,GAAmB,IAAnB;AACH;AACJ;AACJ;AACD;AACA,gBAAIF,QAAJ,EAAc;AACVD,yBAAS,KAAKf,GAAd;AACH;AACD;AACA,gBAAIiB,SAAJ,EAAe;AACXF,yBAAS,KAAKhB,IAAd;AACH;AACD;AACA,gBAAImB,SAAJ,EAAe;AACXH,yBAAS,KAAKrB,IAAd;AACH;AACD;AACA0B,cAAEC,MAAF,CAASN,MAAT,EAAiB,KAAKd,MAAtB;AACH;;;;;AAEL;;;kBA1HqBR,M;AA2HrB,IAAIA,MAAJ","file":"config.js","sourcesContent":["// 导入组件\nimport os from 'os';\n\n// 获得系统平台\nconst platform = os.platform();\n\n// 公共配置相关类\nexport default class Config {\n\n    // 生产环境配置项\n    prod = {\n        // 当前环境名称\n        name: 'prod',\n        // mongodb相关配置\n        mongo: {\n            // mongo数据库连接url\n            url: 'mongodb://DB46e530d2da1f9548e329f5b391c021:4d60bf057c7a9bdc623d3d6234fe5a17@mongo.duapp.com:8908/jKfqhoWaAFPyoZTpDoPU',\n        },\n        // 主机地址\n        host: 'http://hourly.duapp.com'\n    };\n\n    // 测试环境配置项\n    test = {\n        // 当前环境名称\n        name: 'test',\n        // mongodb相关配置\n        mongo: {\n            // mongo数据库连接url\n            url: 'mongodb://DB46e530d2da1f9548e329f5b391c021:4d60bf057c7a9bdc623d3d6234fe5a17@mongo.duapp.com:8908/jKfqhoWaAFPyoZTpDoPU'\n        },\n        // 主机地址\n        host: 'http://hourly.duapp.com'\n    };\n\n    // 开发环境配置项\n    dev = {\n        // 当前环境名称\n        name: 'dev',\n        // mongodb 相关配置\n        mongo: {\n            // mongo数据库连接url\n            url: 'mongodb://127.0.0.1:27017/persiste'\n        },\n        // 主机地址\n        host: 'http://127.0.0.1:18080'\n    };\n\n    // 公共配置信息\n    common = {\n        mongo: {\n            max: 50,\n            // mongo最小连接数\n            min: 1,\n            // mongo连接回收时间(毫秒)\n            idleTimeoutMillis: 25000,\n            // 请求数：200000个/分钟\n            requestPreMinute: 200000,\n            // 流入流量：300MB/分钟\n            inputData: 1024 * 1024 * 300,\n            // 流出流量：600MB/分钟\n            outputData: 1024 * 1024 * 600,\n        },\n        log: {\n            // 日志追加器，console日志器\n            appenders: [{\n                type: \"console\",\n                category: \"console\"\n            }],\n            // 百度bae 日志器，用户名与密码\n            baelogOptions: {\n                'user': 'e0a84b97ebf942adac240373c9733835',\n                'passwd': '38c0c056bbd44922b80621a614cb41b5'\n            }\n        }\n    };\n\n    constructor() {\n        this.init();\n    }\n\n    init() {\n        // 全局配置文件\n        global.config = this.test;\n\n        // 开发环境标志位\n        global.isDevEnv = false;\n        // 测试环境标志位\n        global.isTestEnv = false;\n        // 生产环境标志位\n        global.isProdEnv = false;\n\n        // 判断环境逻辑\n        // 如果系统为windows 32位操作系统\n        if ('linux' !== platform) {\n            // 环境为开发环境\n            global.isDevEnv = true;\n        // 如果系统为linux系统\n        } else if ('linux' === platform) {\n            // 获得系统主机名称\n            let name = os.hostname();\n            // 主机名存在\n            if (name) {\n                // 如果主机名为以下值，则为测试环境\n                if ('appidf57w8ena46' === name) {\n                    // 环境为测试环境\n                    global.isTestEnv = true;\n                } else {\n                    // 其余情况为生产环境\n                    global.isProdEnv = true;\n                }\n            }\n        }\n        // 开发环境配置 + 日志\n        if (isDevEnv) {\n            config = this.dev;\n        }\n        // 测试环境配置 + 日志\n        if (isTestEnv) {\n            config = this.test;\n        }\n        // 生产环境配置 + 日志\n        if (isProdEnv) {\n            config = this.prod;\n        }\n        // 再次追加公共部分\n        _.extend(config, this.common);\n    }\n}\n// 构建公共配置对象\nnew Config();"]}