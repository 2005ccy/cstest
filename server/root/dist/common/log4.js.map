{"version":3,"sources":["../../src/common/log4.js"],"names":["Logger","init","configure","config","log","appenders","getLogger","setLevel","baeLog","isDevEnv","loadAppender","addAppender","baelogOptions","baelog","msg","size","_","join","m","getMsg","trace","debug","info","warn","error","fatal","global","logger"],"mappings":"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","file":"log4.js","sourcesContent":["'use strict';\n\n// 导入log4js组件\nimport log4js from 'log4js';\n\nexport default class Logger {\n\n    constructor() {\n        this.init();\n    }\n\n    // 初始化类\n    init() {\n        //配置日志追加器\n        log4js.configure({\n            \"appenders\": config.log.appenders\n        });\n\n        // console日志器\n        this.log = log4js.getLogger(\"console\");\n        // 设置日志级别\n        this.log.setLevel('TRACE');\n        // 设置bae日志对象\n        this.baeLog();\n    }\n\n    baeLog() {\n        // 不是开发环境，配置bae日志器\n        if (!isDevEnv) {\n            // 加载bae 日志器\n            log4js.loadAppender('baev3-log');\n            // 添加bae日志器\n            log4js.addAppender(log4js.appenders['baev3-log'](config.log.baelogOptions), 'baev3-log');\n            // 获得bae日志器\n            this.baelog = log4js.getLogger('baev3-log');\n        }\n    }\n\n    // 构建\n    getMsg(msg) {\n        let size = _.size(msg);\n        if (0 == size) {\n            return;\n        } else if (1 == size) {\n            return msg[0];\n        } else {\n            return _.join(msg, '\\n; ');\n        }\n    }\n\n    // 追踪日志\n    trace(...msg) {\n        // 构建输出消息\n        let m = this.getMsg(msg);\n        // 如果消息存在\n        if (m) {\n            // bae 追踪日志输出\n            baelog && baelog.trace(m);\n            // 控制台 追踪日志输出\n            log.trace(m);\n        }\n    }\n\n    // debug日志\n    debug(...msg) {\n        // 构建输出消息\n        let m = this.getMsg(msg);\n        // 如果消息存在\n        if (m) {\n            // bae debug日志输出\n            baelog && baelog.debug(m);\n            // 控制台 debug日志输出\n            log.debug(m);\n        }\n    }\n\n    // 信息日志\n    info(...msg) {\n        // 构建输出消息\n        let m = this.getMsg(msg);\n        // 如果消息存在\n        if (m) {\n            // bae 信息日志输出\n            baelog && baelog.info(m);\n            // 控制台 信息日志输出\n            log.info(m);\n        }\n    }\n\n    // 警告日志\n    warn(...msg) {\n        // 构建输出消息\n        let m = this.getMsg(msg);\n        // 如果消息存在\n        if (m) {\n            // bae 警告日志输出\n            baelog && baelog.warn(m);\n            // 控制台 警告日志输出\n            log.warn(m);\n        }\n    }\n\n    // 错误日志\n    error(...msg) {\n        // 构建输出消息\n        let m = this.getMsg(msg);\n        // 如果消息存在\n        if (m) {\n            // bae 错误日志输出\n            baelog && baelog.error(m);\n            // 控制台 错误日志输出\n            log.error(m);\n        }\n    }\n\n    // 致命的错误日志\n    fatal(...msg) {\n        // 构建输出消息\n        let m = this.getMsg(msg);\n        // 如果消息存在\n        if (m) {\n            // bae 致命日志输出\n            baelog && baelog.fatal(m);\n            // 控制台 致命日志输出\n            log.fatal(m);\n        }\n    }\n\n}\n// 定义全局日志对象\nglobal.logger = new Logger();"]}