{"version":3,"sources":["../../src/common/event.js"],"names":["Event","props"],"mappings":";;;;;;AACA;IACMA,K;;AAEF;AACA,iBAAYC,KAAZ,EAAmB;AAAA;AAAE;;AAErB;;;;;qCACiB,CAAE;;AAEnB;;;;oCACgB,CAAE;;;;;;AAKtB","file":"event.js","sourcesContent":["\n// 事件相关类\nclass Event {\n\n    // 事件构造方法\n    constructor(props) {}\n\n    // 事件将要挂载\n    eventWillMount() {}\n\n    // 事件挂载成功\n    eventDidMount() {}\n\n\n}\n\n/*\n情境 S:\n\n事件处理模型，将所有操作抽象成事件处理\n任务 T:\n\n事件处理器 Event Processor 负责，事件Event 生命周期的触发、事件串行，并行处理\n事件Event 实现生命周期逻辑，构建其余事件逻辑关系\n行动 A:\n\n事件挂载 Mounting\n// class constructor -> eventWillMount -> eventDidMount\neventDidMount() {   \n  // 触发其他事件\n  this.event(AjaxEvent, this).props({key: 'value'}).setState({}).then(()=> {\n    \n  });\n}\n事件状态更新 State Change\n// 触发事件状态更新\nthis.setState({\n   key: value\n});\n// eventWillUpdate -> checkEventFinish\n事件卸载 UnMounting\n// checkEventFinish -> eventFinish -> eventWillUnmount\n*/"]}